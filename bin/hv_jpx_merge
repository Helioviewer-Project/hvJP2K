#!/usr/bin/env python

import argparse

from hvJP2K.jpx.jpx_merge import jpx_merge

parser = argparse.ArgumentParser(description='Merge JP2 files into JPX files.')
parser.add_argument('-i', metavar='jp2file1,jp2file2,...', help='comma separated input JP2 filenames', required=True, nargs='+')
parser.add_argument('-o', metavar='jpxfile', help='output JPX filename', required=True)
parser.add_argument('-links', help='record links rather than actual codestream data', action='store_true')
args = parser.parse_args()

# be lenient with stray commas
names = (name.encode() for name in args.i if name)
names_in = [name for name in b','.join(names).split(b',')]

#from redis import Redis
#from rq import Queue

#q = Queue(connection=Redis())
#result = q.enqueue(jpx_merge, names_in, args.o, args.links)
jpx_merge(names_in, args.o, args.links)

'''
import pstats, cProfile

cProfile.runctx('jpx_merge(names_in, args.o, args.links)', globals(), locals(), "Profile.prof")

s = pstats.Stats('Profile.prof')
s.strip_dirs().sort_stats('cumulative').print_stats()
'''
